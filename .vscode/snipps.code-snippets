{
	// Place your ulbi_course workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
 
	"react-component": {
		"prefix": "rc",
		"body": [
		"import { classNames } from 'shared/lib/classNames/classNames';",
		"",
		"import styles from './${TM_FILENAME_BASE}.module.scss';",
		"",
		"interface ${TM_FILENAME_BASE}Props {",
		"\tclassName?: string;",
		"}",
		"",
		"export const ${TM_FILENAME_BASE} = ({ className }: ${TM_FILENAME_BASE}Props) => {",
		"\treturn ("
		"\t\t<div className={classNames(styles.${TM_FILENAME_BASE}, {}, [className])}>",
		"",
		"\t\t</div>"
		"\t);"
		"}",
	]
	},
	"new test template": {
		"prefix": "test",
		"body": [
			"describe('${TM_FILENAME_BASE/(.*?)\\..*/$1/}', () => {",
			"\ttest('$1', () => {",
			"\t\t",
		    "\t\texpect($2()).toEqual();",
		    "\t});",
			"});"
	]
	},
	 "fileName": {
		"prefix": "name",
		"body": [
			"${TM_FILENAME_BASE}",
		],
	},
	"Create a Storybook story": {
		"prefix": "story",
		"body": [
 			"import { ComponentStory, ComponentMeta } from '@storybook/react';",
			"",
			"import { ${1:${TM_FILENAME/(.*).stories.[t|j]sx/${1}/}} } from './${2:${TM_FILENAME/(.*).stories.[t|j]sx/${1}/}}';",
			"",
			"export default {",
			"  title: '${3:shared}/${4:${TM_FILENAME/(.*).stories.[t|j]sx/${1}/}}',",
			"  component: ${1:${TM_FILENAME/(.*).stories.[t|j]sx/${1}/}},",
			"  args: {},",
			"} as ComponentMeta<typeof ${1:${TM_FILENAME/(.*).stories.[t|j]sx/${1}/}}>;",
			"",
			"const Template: ComponentStory<typeof ${1:${TM_FILENAME/(.*).stories.[t|j]sx/${1}/}}> = (args) => (",
			"  <${1:${TM_FILENAME/(.*).stories.[t|j]sx/${1}/}} {...args} />",
			");",
			"",
			"export const ${5:Story} = Template.bind({});",
			"$5.args = {};",
			"$0",
		],
		"description": "Create a Storybook story"
	}
}
}